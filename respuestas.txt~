18. La salida es nula (Devuelve nil) y muestra Hola mundo en pantalla.

21. El que está entre comillas dobles codificará el contenido, mientras que en las comillas simples aparecerá literalmente /t/n.24

24.Guarda los nombres de las variables literalmente, concatenadas.
	--4--
	--2--

25. Guarda el valor de las variables, concatenadas.
	--#{a}--
	--#{b}--

26. s[0,2] = "he"
    s[-1,1] = "o"
    s[0,10] = "hello"

27. "Hello World"

28. "..."

29."2 2 2"


30. Separa la cadena de caracteres por los espacios.

33. [nil,nil,nil]

34. [0,0,0]

35. 1
    2
    3
    4

36. [0,2,4]

37.
   a[1,1] =["b"]
   a[-2,2]=["d", "e"]
   a[0..2]=["a", "b", "c"]
   a[0...1]= ["a"]
   a[-2..-1]=["d", "e"]

38.
   ["A", "B", "c", "d", "e"]
   ["A", "B", "C", "D", "E"]
   [1, 2, 3, "A", "B", "C", "D", "E"]
   [3, "A", "B", "C", "D", "E"]
   [3, "A", "B", "C", "D", "Z"]
   [3, "A", "B", "C", nil]

39. 
   [1, 2, 3]
   [1, 2, 3, 4, 5]
   [1, 2, 3, 4, 5, [6, 7, 8]]
   TypeError: can't convert Fixnum into Array

40.
   ["a", "b", "c", "b", "a"]
   ["a", "a"]
   

41. 
   [0, 0, 0, 0, 0, 0, 0, 0]

42.
   [1]
   [1, 2, 3]
   [1, 2, 3, [4, 5, 6]]
   [1, 2, 3, [4, 5, 6], 7, 8]


43.
   [1, 2, 3, 4, 5]
   [2, 3, 4]
   [4, 3, 2]

44. 
   [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   [1, 2, 3, 4, 5, 6, 7, 8, 9]
   false
   true
   1 3 5 7 9 => 1...10
   

45.
   true
   true
   true


46. 
   TrueClass
   FalseClass
   hello => nil
   nil
   hello => nil

47.
   Symbol
   false
   true
   symbol
   true
   true

48. 
   RubJava

49.
  "3 rubies"

50.
   [4, 5]
   5
   [1, 2, 3]

51.
  [:a, :b]
  [1, 2]
  {:a=>1, :b=>2, :c=>3}
  {:a=>1, :b=>2, :c=>3}
  {:b=>2, :c=>3}
  {:a=>1}
  

53. La diferencia consiste en que en el primer caso se crea un objeto de la clase Hash, y en la segunda se guarda como una cadena.

54. 
   ["hello", "world", "hello", "LPP"]


55. Muestra ambos contenidos de la lista, tanto los símbolos, como los valores que toman.
  
   	

























































   


	







